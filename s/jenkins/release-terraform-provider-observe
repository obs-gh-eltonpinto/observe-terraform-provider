#! /usr/bin/env bash
set -euxo pipefail

# Wrapper around s/push-terraform-provider-observe that creates and pushes
# a git tag once the provider has been built and published to S3

if [[ -z "${Version-}" ]]; then
    echo 1>&2 "Must specify a version to release"
    exit 1
fi

if ! [[ "$Version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo 1>&2 "Version must be a semantic version of the form <major>.<minor>.<patch>" \
        "where <major>, <minor>, and <patch> are all zero or positive numbers"
    exit 1
fi

# Preemptively remove the tag we're about to create, in case it's left over from
# a prior dry run
git tag -d "$Version" 2> /dev/null || true
# Then fetch tags from the remote upstream. Either the tag doesn't exist in the upstream
# and it's fine to have deleted it locally, or it does exist in the upstream and when
# we try to create a tag with the same name, the build will fail
git fetch --prune --tags
git tag "$Version"

if [[ "${DryRun-}" = true ]]; then
    echo "Dry run; skipping remote push of tag $Version"
else
    git push origin "$Version"
fi

mydir=$(dirname $0)
export DryRun
exec "$mydir"/push-terraform-provider-observe
